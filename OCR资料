1) 在java上使用tesseract实现ocr，安装+代码（这个比较全面）：baeldung.com/java-ocr-tesseract
2) tesseract OCR开源数据集：https://github.com/tesseract-ocr/tessdata        ssh:git@github.com:tesseract-ocr/tessdata.git
3) tesseract 开源代码：https://github.com/tesseract-ocr/tesseract    ssh:git@github.com:tesseract-ocr/tesseract.git
4) java+Tesseract-OCR实现图片识别: https://blog.csdn.net/anshengsuiyeu/article/details/79130260?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.compare&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.compare
5) Java使用Tesseract-OCR进行图像中文文字识别: http://bcxw.net/article/528.html
6) OCR简介：https://zhuanlan.zhihu.com/p/45376274

7/29会议后更新：
一、资料查阅

影响OCR识别率的因素
1.	图文混合：一般情况下，需要忽视图片的信息，只获取文本内容，但是ocr难以分辨image中的图片，极有可能纳入图片中的文字
2.	语言混合：例如，中英文混合，繁简体混合，需要加入多个语言包，猜测会对识别造成影响
3.	待补充


提高OCR识别率的方法
1.	Training 开源的OCR引擎tesseract有官方提供的训练材料（目前最新版本是Tess4J, 4.1.1, LSTM based），可能需要改变训练方法提高正确率
2.	Image preprocessing 改进图片预处理的方法，例如优化灰度，平滑度的调整
3.	待补充

（以上内容需要查阅更多文献进行补充）

二、Tesseract
（1）Tesseract is an open source framework written in C++ which allows us to work with PNG images, 
JPG images and PDF files and return the text the file contains so that we can use that text as we want.

（2）了解Tesseract
https://www.geeksforgeeks.org/tesseract-ocr-with-java-with-examples/

（3）GitHub的OCR资源库
https://github.com/tesseract-ocr/

（4）Some tips for improving OCR accuracy by optimizing image preprocessing(可靠性有待考证)
https://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy

三、JTessBoxEditor
Tesseract训练扫盲视频
https://www.bilibili.com/video/BV18J411t7Y6?from=search&seid=8360862115063139930
1.	可以使用自己的训练材料
2.	训练前需要设置字体，大小
3.	需要写脚本
4.	训练完后获得一个字库
5.	训练完可以进行纠错提高正确率
6.	最新的训练方法是LSTM

四、如何配置Tesseract环境并跑出demo
1．	下载：https://sourceforge.net/projects/tess4j/
2．	解压缩包后放在自己习惯的文件夹下
3．	打开IDEA新建项目
4．	File->Project Structure->Modules->dependencies-> ”+”号->JARs or Directories
5．	选择刚下载的Tess4j->lib目录下所有jar文件以及dist目录下唯一一个jar文件 （记得设置完后点OK!）
6．	右键项目里的src将其设置为source root
7．	新建名为OcrDemo的java文件
8．	复制以下链接里的代码
https://www.geeksforgeeks.org/tesseract-ocr-with-java-with-examples/
注意，不要学这里的环境配置
9. 找一张png, jpg或pdf，将代码里“image.jpg”替换成测试图片的路径
10. run你的项目，然后可以在终端上看到结果

另附：
另一个Demo: 使用Tesseract + GraphicsMagick进行简单的OCR处理（这个涉及到了图片预处理）
https://github.com/tonydeng/tess4j-ocr-demo







